@model ProductDetailsModel.ProductPriceModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext
@if (!Model.CustomerEntersPrice)
{
    <div class="info-price info-price-detail">
        <div class="prices" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
            @if (Model.CallForPrice)
            {
                @*call for price*@
                <div class="product-price call-for-price">
                    <span>@T("Products.CallForPrice")</span>
                </div>
            }
            else
            {
                if (Model.IsRental)
                {
                    <div class="rental-price">
                        <label>@T("Products.Price.RentalPrice"):</label>
                        <span>@Model.RentalPrice</span>
                    </div>
                }

                <div class="@if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
                        {
                            <text>product-price</text>
                        }
                        else
                        {
                            <text>non-discounted-price</text>
                        }">

                    <label>@T("Products.Price"):</label>
                    @*render price*@<span @if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount)) { <text> itemprop="price" content="@Model.PriceValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" class="price-value-@(Model.ProductId)" </text> }>

                        @if (!string.IsNullOrEmpty(Model.Price))
                        {
                            @Html.Raw(Model.Price).RenderHtmlContent().Replace("₺","TL")
                        }
                        else
                        {
                            @Html.Raw(Model.Price).RenderHtmlContent().Replace("₺","TL")
                        }

                    </span>
                    @if (!string.IsNullOrWhiteSpace(Model.OldPrice))
                    {
                        <del>@Model.OldPrice.Replace("₺", "TL")</del>
                        <div class="detail-sale">% @Model.Discount İndirim</div>
                    }
                </div>
                if (!string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
                {
                    @*discounted price*@
                    <div class="product-price discounted-price">
                        <label>@T("Products.Price.WithDiscount"):</label>
                        <span itemprop="price" content="@Model.PriceValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" class="price-value-@(Model.ProductId)">
                            @Html.Raw(Model.PriceWithDiscount)
                        </span>
                    </div>
                }
                if (!string.IsNullOrEmpty(Model.BasePricePAngV))
                {
                    <div class="base-price-pangv" id="base-price-pangv-@Model.ProductId">
                        @Model.BasePricePAngV
                    </div>
                }
                if (Model.DisplayTaxShippingInfo)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <div class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </div>
                }
                if (!string.IsNullOrEmpty(Model.CurrencyCode))
                {
                    <meta itemprop="priceCurrency" content="@Model.CurrencyCode" />
                }
            }
        </div>
    </div>
}

