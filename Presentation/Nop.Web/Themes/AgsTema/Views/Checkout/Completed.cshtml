@model CheckoutCompletedModel
@{
    Layout = "_ColumnsOnes";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-completed-page");
}
<div class="page checkout-page order-completed-page bg-color-white">
    @if (!Model.OnePageCheckoutEnabled)
    {
        @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Complete })
    }
    
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
        <div class="section order-completed">

            <div class="item-feature-box text-center feature-box-style-10">
                <div class="feature-box-icon">
                    <a href="#" class="feature-box-link">
                        <span class="lnr lnr-checkmark-circle"></span>
                    </a>
                </div>
                <div class="feature-box-info">
                    <h2 class="title">@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</h2>
                    <h4>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</h4>
                    <p><a href="@Url.RouteUrl("OrderDetails", new {orderID = Model.OrderId})">@T("Checkout.PlacedOrderDetails")</a></p>
                    <p>@T("Checkout.ThankYou")</p>
                    <div class="buttons">
                        <input type="button" value="@T("Checkout.ThankYou.Continue")" class="button-1 order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("HomePage")')" />
                    </div>
                </div>
            </div>



        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
    </div>
</div>
