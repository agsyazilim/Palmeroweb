@model RegisterModel
@using System.Text.Encodings.Web
@{
    Layout = "_ColumnsOnes";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script asp-location="Footer">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").on('change', function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}




<div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
    <h2 class="title"><i class="fa fa-edit"></i>@T("Account.Register")</h2>
</div>
<div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
<div class="account-login">
<div class="external-authentication">
    @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
</div>
<form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" class="form-my-account">
<div asp-validation-summary="ModelOnly" class="message-error"></div>
<h4>@T("Account.YourPersonalDetails")</h4>

@if (Model.GenderEnabled)
{
    <p>
        <div class="gender">
            <span class="male">
                <input type="radio" asp-for="Gender" value="M" checked="@(Model.Gender == "M")" id="gender-male"/>
                <label class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</label>
            </span>
            <span class="female">
                <input type="radio" asp-for="Gender" value="F" checked="@(Model.Gender == "F")" id="gender-female"/>
                <label class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</label>
            </span>
        </div>
    </p>
}
<p>
    <input asp-for="FirstName" type="text" placeholder="Adınız"/>
    <nop-required/>
    <span asp-validation-for="FirstName"></span><span class="icon-user"></span>
</p>
<p>
    <input asp-for="LastName" placeholder="Soyadınız"/>
    <nop-required/>
    <span asp-validation-for="LastName"></span><span class="icon-user"></span>
</p>
@if (Model.DateOfBirthEnabled)
{
    <div class="inputs date-of-birth">
        <label>@T("Account.Fields.DateOfBirth"):</label>
        <nop-date-picker asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
                         asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
                         asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
                         asp-begin-year="@(DateTime.Now.Year - 110)"
                         asp-end-year="@(DateTime.Now.Year)"
                         asp-selected-day="@Model.DateOfBirthDay"
                         asp-selected-month="@Model.DateOfBirthMonth"
                         asp-selected-year="@Model.DateOfBirthYear"/>
        @if (Model.DateOfBirthRequired)
        {
            <nop-required/>
        }
        <span asp-validation-for="DateOfBirthDay"></span>
        <span asp-validation-for="DateOfBirthMonth"></span>
        <span asp-validation-for="DateOfBirthYear"></span>
    </div>
}
<p class="inputs">
    <input asp-for="Email" class="email" placeholder="E Posta Adresiniz"/>
    <nop-required/>
    <span asp-validation-for="Email"></span><span class="icon-mail"></span>
</p>
@if (Model.EnteringEmailTwice)
{
    <p class="inputs">
        <input asp-for="ConfirmEmail" class="email" placeholder="E Postanızı Tekrar Giriniz"/>
        <nop-required/>
        <span asp-validation-for="ConfirmEmail"></span><span class="icon-mail"></span>
    </p>
}
@if (Model.UsernamesEnabled)
{
    <p class="inputs">
        <input asp-for="Username" class="username" placeholder="Kullanıcı Adı Giriniz"/>
        <nop-required/>
        <span asp-validation-for="Username"></span><span class="icon-user"></span>
        @if (Model.CheckUsernameAvailabilityEnabled)
        {
            @await Html.PartialAsync("_CheckUsernameAvailability")
        }
    </p>

}


@if (Model.CompanyEnabled || Model.DisplayVatNumber)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.CompanyDetails")</strong>
        </div>
        <div class="form-fields">
            @if (Model.CompanyEnabled)
            {
                <p class="inputs">

                    <input asp-for="Company" placeholder="Şirket Adı Giriniz..."/>
                    @if (Model.CompanyRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="Company"></span>
                </p>
            }
            @if (Model.DisplayVatNumber)
            {
                <p class="inputs">
                    <input asp-for="VatNumber" placeholder="Vergi Numarası Giriniz"/><br/>
                    <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                </p>
            }
        </div>
    </div>
}
@if (Model.StreetAddressEnabled ||
     Model.StreetAddress2Enabled ||
     Model.ZipPostalCodeEnabled ||
     Model.CityEnabled ||
     Model.CountyEnabled ||
     Model.CountryEnabled)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.YourAddress")</strong>
        </div>
        <div class="form-fields">
            @if (Model.StreetAddressEnabled)
            {
                <p class="inputs">
                    <input asp-for="StreetAddress" placeholder="Adres Giriniz"/>
                    @if (Model.StreetAddressRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="StreetAddress"></span>
                </p>
            }
            @if (Model.StreetAddress2Enabled)
            {
                <p class="inputs">

                    <input asp-for="StreetAddress2" placeholder="Adres Giriniz"/>
                    @if (Model.StreetAddress2Required)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="StreetAddress2"></span>
                </p>
            }
            @if (Model.ZipPostalCodeEnabled)
            {
                <p class="inputs">

                    <input asp-for="ZipPostalCode" placeholder="Posta Kodu"/>
                    @if (Model.ZipPostalCodeRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="ZipPostalCode"></span>
                </p>
            }
            @if (Model.CountyEnabled)
            {
                <p class="inputs">
                    <input asp-for="County" placeholder="İlçe Kasaba Giriniz"/>
                    @if (Model.CountyRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="County"></span>
                </p>
            }
            @if (Model.CityEnabled)
            {
                <p class="inputs">
                    <input asp-for="City" placeholder="Şehir Giriniz"/>
                    @if (Model.CityRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="City"></span>
                </p>
            }
            @if (Model.CountryEnabled)
            {
                <p class="inputs">
                    <select asp-for="CountryId" asp-items="Model.AvailableCountries"></select>
                    @if (Model.CountryRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="CountryId"></span>
                </p>
            }
            @if (Model.CountryEnabled && Model.StateProvinceEnabled)
            {
                <p class="inputs">
                    <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
                    @if (Model.StateProvinceRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="StateProvinceId"></span>
                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                </p>
            }
        </div>
    </div>
}
@if (Model.PhoneEnabled || Model.FaxEnabled)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.YourContactInformation")</strong>
        </div>
        <div class="form-fields">
            @if (Model.PhoneEnabled)
            {
                <p class="inputs">
                    <input asp-for="Phone" type="text" placeholder="Telefon Numaranızı Giriniz"/>
                    @if (Model.PhoneRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="Phone"></span><span class="icon-phone"></span>
                </p>
            }
            @if (Model.FaxEnabled)
            {
                <p class="inputs">
                    <input asp-for="Fax" type="text" placeholder="Faks Giriniz"/>
                    @if (Model.FaxRequired)
                    {
                        <nop-required/>
                    }
                    <span asp-validation-for="Fax"></span><span class="icon-phone"></span>
                </p>
            }
        </div>
    </div>
}
@if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.Options")</strong>
        </div>
        <div class="form-fields">
            @if (Model.NewsletterEnabled)
            {
                <p>
                    <label asp-for="Newsletter" asp-postfix=":"></label>
                    <input asp-for="Newsletter"/>
                    <span asp-validation-for="Newsletter"></span>
                </p>
            }
            @if (Model.CustomerAttributes.Count > 0)
            {
                @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
            }
        </div>
    </div>
}
@if (Model.AllowCustomersToSetTimeZone)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.Preferences")</strong>
        </div>
        <div class="form-fields">
            <p class="inputs">

                <select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
                <span asp-validation-for="TimeZoneId"></span>
            </p>
        </div>
    </div>
}


<h4>@T("Account.YourPassword")</h4>

<div class="form-fields">
    <p class="inputs">
        <input asp-for="Password" class="password" placeholder="Şifrenizi Giriniz"/>
        <nop-required/>
        <span asp-validation-for="Password"></span><span class="icon-password"></span>
    </p>
    <p class="inputs">
        <input asp-for="ConfirmPassword" class="password" placeholder="Şifrenizi Tekrar Giriniz"/>
        <nop-required/>
        <span asp-validation-for="ConfirmPassword"></span><span class="icon-password"></span>
    </p>
    @if (Model.DisplayCaptcha)
    {
        <div class="captcha-box">
            <nop-captcha/>
        </div>
    }
    @if (Model.HoneypotEnabled)
    {
        @Html.Raw(Html.GenerateHoneypotInput())
    }
</div>


@if (Model.AcceptPrivacyPolicyEnabled || Model.GdprConsents.Count > 0)
{
    <div class="fieldset">
        <div class="title">
            <strong>@T("Account.UserAgreement")</strong>
        </div>
        <div class="form-fields">
            @if (Model.AcceptPrivacyPolicyEnabled)
            {
                <script asp-location="Footer">
                    $(document).ready(function() {
                        $('#register-button').on('click',
                            function() {
                                if ($('#accept-consent').is(':checked')) {
                                    //do some stuff
                                    return true;
                                } else {
                                    //just show validation errors, don't post
                                    alert(
                                        '@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                    return false;
                                }
                            });
                    });
                </script>
                <div class="inputs accept-consent">
                    <input id="accept-consent" type="checkbox" name="accept-consent"/>
                    <label for="accept-consent">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                    @if (Model.AcceptPrivacyPolicyPopup)
                    {
                        <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                        <script asp-location="Footer">
                            $(document).ready(function() {
                                $('#read-privacyinfo').on('click',
                                    function(e) {
                                        displayPopupContentFromUrl(
                                            '@Url.RouteUrl("TopicPopup", new {SystemName = "privacyinfo"})',
                                            '@T("Account.Fields.AcceptPrivacyPolicy")');
                                    });
                            });
                        </script>
                    }
                    else
                    {
                        <a class="read" id="read-privacyinfo" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("privacyinfo")})">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                    }
                </div>
            }

            @if (Model.GdprConsents.Count > 0)
            {
                foreach (var consent in Model.GdprConsents)
                {
                    if (consent.IsRequired)
                    {
                        <script asp-location="Footer">
                            $(document).ready(function() {
                                $('#register-button').on('click',
                                    function() {
                                        if ($('#consent@(consent.Id)').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        } else {
                                            //just show validation errors, don't post
                                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))');
                                            return false;
                                        }
                                    });
                            });
                        </script>
                    }
                    <div class="inputs accept-consent">
                        <input id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted"/>
                        <label for="consent@(consent.Id)">@consent.Message</label>
                    </div>
                }

            }
        </div>
    </div>
}


<div class="buttons">
    <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button"/>
</div>
</form>

</div>
</div>


