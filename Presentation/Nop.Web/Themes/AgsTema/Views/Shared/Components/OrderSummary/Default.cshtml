@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings





<div class="order-summary-content">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentBefore })
    @await Html.PartialAsync("_OrderReviewData", Model.OrderReviewData)
    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
        <form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
            <div class="content-page woocommerce bg-color-grey">
                <div class="container">
                    <div class="cart-content-page">
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <table class="table table-hover table-condensed shop_table cart table bg-color-white">

                                <thead>
                                    <tr>
                                        <th style="width:50%"><h3 class="text-color-orange">@T("cart.sepetim")</h3></th>
                                        <th style="width:15%">
                                            @T("ShoppingCart.UnitPrice")
                                        </th>
                                        <th style="width:10%">
                                            @T("ShoppingCart.Quantity")
                                        </th>
                                        <th style="width:17%" class="text-left">
                                            @T("ShoppingCart.ItemTotal")
                                        </th>
                                        <th style="width: 3%">@T("ShoppingCart.Remove")</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>


                                            @if (Model.ShowProductImages)
                                            {
                                                <td data-th="Ürün">
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" class="img-responsive" /></a>
                                                        </div>
                                                        <div class="col-sm-9">
                                                            <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name">
                                                                <h4 class="nomargin mt-25">@item.ProductName</h4>
                                                            </a>
                                                            @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                                            {
                                                                <div class="attributes">
                                                                    @Html.Raw(item.AttributeInfo)
                                                                </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(item.RecurringInfo))
                                                            {
                                                                <div class="recurring-info">
                                                                    @Html.Raw(item.RecurringInfo)
                                                                </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(item.RentalInfo))
                                                            {
                                                                <div class="rental-info">
                                                                    @Html.Raw(item.RentalInfo)
                                                                </div>
                                                            }
                                                            @if (Model.IsEditable && item.AllowItemEditing)
                                                            {
                                                                var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
                                                                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                                                                <div class="edit-item">
                                                                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                                                </div>
                                                            }
                                                            @if (item.Warnings.Count > 0)
                                                            {
                                                                <div class="message-error">
                                                                    <ul>
                                                                        @foreach (var warning in item.Warnings)
                                                                        {
                                                                            <li>@Html.Raw(warning)</li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            }

                                                        </div>
                                                    </div>

                                                </td>
                                            }


                                            <td class="Fiyat">
                                                <span class="product-unit-price">
                                                    @if (!string.IsNullOrEmpty(item.UnitPrice))
                                                    {
                                                        @String.Format("{0} TL", item.UnitPrice.Substring(1))
                                                    }

                                                </span>
                                            </td>
                                            <td data-th="Miktar">
                                                @if (Model.IsEditable)
                                                {
                                                    if (item.AllowedQuantities.Count > 0)
                                                    {
                                                        <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
                                                            @foreach (var qty in item.AllowedQuantities)
                                                            {
                                                                <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                            }
                                                        </select>
                                                    }
                                                    else
                                                    {
                                                        <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="form-control-lg text-left" />
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="form-control-lg text-left">@item.Quantity</span>
                                                }
                                            </td>
                                            <td data-th="subtotal" class="text-left">

                                                <ul>
                                                    <li>
                                                        <div class="info-price">
                                                            <span class="product-subtotal">
                                                                   
                                                                    @item.SubTotal.Replace("$","TL")
                                                                


                                                            </span>
                                                        </div>

                                                        @if (!string.IsNullOrEmpty(item.Discount))
                                                        {
                                                            <div class="discount">
                                                                @T("ShoppingCart.ItemYouSave", item.Discount)
                                                            </div>
                                                            if (item.MaximumDiscountedQty.HasValue)
                                                            {
                                                                <div class="discount-additional-info">
                                                                    @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                                                </div>
                                                            }
                                                        }
                                                    </li>
                                                </ul>

                                            </td>

                                            @if (Model.IsEditable)
                                            {
                                                <td class="actions">
                                                    @if (item.DisableRemoval)
                                                    {
                                                        <text>&nbsp;</text>
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)" />
                                                    }
                                                </td>
                                            }

                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td class="action" colspan="6">
                                            <div class="cart-footer">
                                                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryCartFooter })

                                                @if (Model.IsEditable)
                                                {
                                                    <div class="row">
                                                        <div class="common-buttons">
                                                            <input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button update-cart-button" />
                                                            <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button continue-shopping-button" />
                                                        </div>

                                                    </div>

                                                }
                                                @if (Model.IsEditable)
                                                {
                                                    <div class="row">
                                                        <div class="coupon">
                                                            <div class="col-md-6">
                                                                @await Html.PartialAsync("_DiscountBox", Model.DiscountBox)
                                                            </div>
                                                            <div class="col-md-6">
                                                                @await Html.PartialAsync("_GiftCardBox", Model.GiftCardBox)
                                                                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentDeals })
                                                            </div>
                                                            @await Component.InvokeAsync("EstimateShipping")
                                                        </div>

                                                    </div>


                                                }

                                            </div>
                                            @if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                                            {
                                                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                                                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                                                //of course, you can modify appropriate locales to include VAT info there
                                                <div class="tax-shipping-info">
                                                    @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                                                </div>
                                            }
                                            <div class="cart-options">

                                                @if (Model.IsEditable)
                                                {
                                                    @await Html.PartialAsync("_CheckoutAttributes", Model)
                                                }
                                                @await Component.InvokeAsync("SelectedCheckoutAttributes")
                                            </div>



                                        </td>
                                    </tr>

                                </tfoot>
                            </table>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="cart-collaterals">
                                <div class="cart_totals">
                                    <h2>@T("cart.siparisozeti")</h2>
                                    @await Component.InvokeAsync("OrderTotals", new { isEditable = Model.IsEditable })
                                    @if (Model.IsEditable)
                                    {
                                        if (!string.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                        {
                                            <div class="min-amount-warning">
                                                @Model.MinOrderSubtotalWarning
                                            </div>
                                        }
                                    }
                                    @if (Model.IsEditable)
                                    {
                                        if (Model.TermsOfServiceOnShoppingCartPage)
                                        {
                                            <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
                                                <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                                            </div>
                                            <div class="terms-of-service">
                                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                                <label for="termsofservice">
                                                    @T("Checkout.TermsOfService.IAccept")
                                                @if (Model.TermsOfServicePopup)
                                                {
                                                    <a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>
                                                    <script asp-location="Footer">
                                                         $(document).ready(function() {
                                                            $('#read-terms').on('click',
                                                                function(e) {
                                                                    e.preventDefault();
                                                                    displayPopupContentFromUrl(
                                                                        '@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})',
                                                                        '@T("Checkout.TermsOfService")');
                                                                });
                                                        });
                                                    </script>
                                                }
                                                else
                                                {
                                                    <a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName ("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
                                                }
                                            </label>
                                        </div>
                                    }
                                    <div class="wc-proceed-to-checkout">
                                        @if (string.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
                                        {
                                            <script asp-location="Footer">
                                                $(document).ready(function () {
                                                    $('#checkout').on('click', function () {
                                                        //terms of service
                                                        var termOfServiceOk = true;
                                                        if ($('#termsofservice').length > 0) {
                                                            //terms of service element exists
                                                            if (!$('#termsofservice').is(':checked')) {
                                                                $("#terms-of-service-warning-box").dialog();
                                                                termOfServiceOk = false;
                                                            } else {
                                                                termOfServiceOk = true;
                                                            }
                                                        }
                                                        return termOfServiceOk;
                                                    });
                                                });
                                            </script>
                                            if (orderSettings.CheckoutDisabled)
                                            {
                                                <div class="checkout-disabled">
                                                    @T("Checkout.Disabled")
                                                </div>
                                            }
                                            else
                                            {

                                                <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                                    @T("Checkout.Button")
                                                </button>
                                            }
                                        }
                                    </div>
                                    <div class="addon-buttons">
                                        @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                        @foreach (var pm in Model.ButtonPaymentMethodViewComponentNames)
                                        {
                                            @await Component.InvokeAsync(pm)
                                        }
                                    </div>
                                }
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (Model.IsEditable)
                    {
                        @await Component.InvokeAsync("CrossSellProducts")
                    }
                </div>
            </div>
        </form>
    }
    else
    {
        <div class="no-data">
            @T("ShoppingCart.CartIsEmpty")
        </div>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentAfter })
</div>