@model HeaderLinksModel
@using System.Text.Encodings.Web
<div class="register-box">
    <ul>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
        @if (Model.IsAuthenticated)
        {
            <li><a href="@Url.RouteUrl("CustomerInfo")"><i class="fa fa-lock"></i> @T("Account.MyAccount")@*@Model.CustomerName*@</a></li>
            <li><a href="@Url.RouteUrl("Logout")"><i class="fa fa-sign-out"></i> @T("Account.Logout")</a></li>
        }
        else
        {
            <li><a href="@Url.RouteUrl("Register")"><i class="fa fa-pencil-square-o"></i> @T("Account.Register")</a></li>
            <li><a href="@Url.RouteUrl("Login")"><i class="fa fa-pencil-square-o"></i> @T("Account.Login")</a></li>
        }
        @if (Model.AllowPrivateMessages)
        {
            <li>
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                    <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                    <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                </a>
            </li>
        }
        @*@if (Model.WishlistEnabled)
        {
            <li>
                <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                    <span class="wishlist-label">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            </li>
        }*@
       
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter })
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
   
</div>

@if (Model.ShoppingCartEnabled)
{
    <div class="mini-cart mini-cart-2" id="topcartlink">
        <a href="@Url.RouteUrl("ShoppingCart")" class="header-mini-cart2">
            <span class="total-mini-cart-icon"><i class="fa fa-shopping-basket"></i></span>
            <span class="total-mini-cart-item">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
        </a>
        @await Component.InvokeAsync("FlyoutShoppingCart")
    </div>
    if (Model.ShoppingCartEnabled)
     {
         <script asp-location="Footer">
             $(document).ready(function () {
                 $('.header').on('mouseenter', '#topcartlink', function () {
                     $('#flyout-cart').addClass('active');
                 });
                 $('.header').on('mouseleave', '#topcartlink', function () {
                     $('#flyout-cart').removeClass('active');
                 });
                 $('.header').on('mouseenter', '#flyout-cart', function () {
                     $('#flyout-cart').addClass('active');
                 });
                 $('.header').on('mouseleave', '#flyout-cart', function () {
                     $('#flyout-cart').removeClass('active');
                 });
             });
         </script>
     }
}
