@model AdminHeaderLinksModel
<!-- Top Header -->
<div class="top-header">
    <div class="container">
        <div class="row">
            <div class="quick-category">
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderSelectors })
                @if (Model.IsCustomerImpersonated || Model.DisplayAdminLink)
                {

                    if (Model.IsCustomerImpersonated)
                    {
                        <div class="impersonate">
                            <span>@string.Format(T("Account.ImpersonatedAs").Text, Model.ImpersonatedCustomerName)</span>
                            <a href="@Url.RouteUrl("Logout")" class="finish-impersonation" title="@T("Account.ImpersonatedAs.Finish.Hint")">@T("Account.ImpersonatedAs.Finish")</a>
                        </div>
                    }
                    if (Model.DisplayAdminLink)
                    {
                        <a href="@Url.Content("~/Admin")" class="administration"><i class="fa fa-user-md"></i>@T("Account.Administration")</a>
                    }
                    if (!string.IsNullOrEmpty(Model.EditPageUrl))
                    {
                        <a href="@Model.EditPageUrl" class="manage-page">@T("Common.ManagePage")</a>
                    }

                }
            </div>
        </div>
    </div>
</div>
<!-- End Top Header -->
